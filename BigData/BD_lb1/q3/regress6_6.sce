clc
printf('Hello world')
arrX = [
1 ,11;
1, 9.5;
1, 8.1;
1, 25;
1, 19 ;
1, 3.6;
1, 15;
1, 5.3;
1, 9.5;
1, 15;
1, 14;
1, 27;
1, 27;
1, 70;
1, 34;
1, 13]
arrY = [57.41; 40.6; 57.2; 122.49; 63.5; 37.41; 42.75; 41.3; 44.89; 47.9; 59.46; 67.79; 67.79; 124.51; 99.7; 43.63]
x = [11;
9.5;
8.1;
25;
19;
3.6;
15;
5.3;
9.5;
15;
14;
27;
27;
70;
34;
13
]


// аналитическое решение
disp(arrX)
arrXT = arrX'
disp(arrXT)
arrXT_x = arrXT * arrX
disp(arrXT_x)
arrXT_x_inv = inv(arrXT_x) // ^-1
disp(arrXT_x_inv)
arrXT_x_inv_xt = arrXT_x_inv * arrXT // ^-1 * T
disp(arrXT_x_inv_xt)
arrXT_x_inv_xt_y = arrXT_x_inv_xt * arrY
disp(arrXT_x_inv_xt_y)
plot(x, arrY, "*")
ab = arrXT_x_inv_xt_y
function y = reg(x)
    y = ab(2)*x + ab(1);
endfunction;
plot(x ,reg(x))





// численное решение
a0 = 15
a1 = 0
function y = h(x)
    y = a1 * x + a0;
endfunction;

hx = h(x)
hx_minusY = hx - arrY
sum = 0
for i = 1:1:16
    sum = sum + hx_minusY(i).^2
end
disp(sum)

//xbasc()
clc
//Функция, вычисляющая разность между экспериментальными
//и теоретическими значениями,
//перед использованием необходимо определить
//z=[x;y] - матрицу исходных данных и
//с - вектор начальных значений коэффициентов,
//размерность вектора должна совпадать
//с количеством искомых коэффициентов
function y=G(c,z)
y=z(2)-c(1)-c(2)*z(1)//-c(3)*z(1)^2
endfunction
//Исходные данные
//  x=[5 7 9 11 13];
//  y=[2.5 4.9 8 12.1 16.9];
//Формирование матрицы исходных данных
x = x
y = arrY
z=[x;y];//та же буква, что и в функции y=G(c,z)
//Вектор начальных приближений
c=[0;0];//нулей столько, сколько искомых коэффициентов. //Это нач. приближение
//Решение задачи
[a,err]=datafit(G,z,c)
//Построение графика экспериментальных данных
plot2d(x,y,-4);
//Построение графика подобранной функции на отрезке [4 , 14]
//t=4:0.01:14;
//Ptc=a(1)+a(2)*t+a(3)*t^2;
//plot2d(t,Ptc);






